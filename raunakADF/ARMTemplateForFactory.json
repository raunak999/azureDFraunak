{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "raunakADF"
		},
		"raunakADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'raunakADLS'"
		},
		"raunakSQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'raunakSQLDB'"
		},
		"raunakSQLDBKeyVault_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'raunakSQLDBKeyVault'"
		},
		"REST_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://restcountries.com/v2/all"
		},
		"raunakADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raunak210299.dfs.core.windows.net"
		},
		"raunak_Azure_Key_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://raunakKeyVault.vault.azure.net/"
		},
		"Storage_Event_trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/3a3dc6a1-7fae-4162-b46c-d80bda068e0e/resourceGroups/raunakdoesAZURE/providers/Microsoft.Storage/storageAccounts/raunak210299"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/For Each Activity Example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is like similar to For loop concept where data has to be copied for multiple tables and the same pipeline can be reused.",
				"activities": [
					{
						"name": "ForEach_Activity_Example",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('Customer','Product','CustomerAddress','ProductDescription')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data of multiple tables",
									"description": "Every time the loop runs different table data will be copied (whatever we have declared in array input. ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sql_generic_db",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "saleslt",
												"tableName": {
													"value": "@item()",
													"type": "Expression"
												},
												"databaseName": "raunakdb"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azureADLSDataSet",
											"type": "DatasetReference",
											"parameters": {
												"folderName": {
													"value": "@concat(item(),'-For Each Activity example')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Fail Activity",
						"description": "This activity lets us create some customized error/exception.",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "ForEach_Activity_Example",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "No Table: Table doesn't exist in the DB",
							"errorCode": "1001"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T04:57:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_generic_db')]",
				"[concat(variables('factoryId'), '/datasets/azureADLSDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/INCREMENTAL_PIPELINE_example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup HighwaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "High_WaterMark_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Lookup Fetch HighWaterMark Date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup HighwaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(ModifiedDate) as LastModifiedDate from saleslt.customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sql_generic_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "saleslt",
									"tableName": "Customer",
									"databaseName": "raunakdb"
								}
							}
						}
					},
					{
						"name": "Copy Customer Data from DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup Fetch HighWaterMark Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from saleslt.customer where ModifiedDate > ''',activity('Lookup HighwaterMark').output.firstRow.prop_0,'''and ModifiedDate <= ''',activity('Lookup Fetch HighWaterMark Date').output.firstRow.LastModifiedDate,'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sql_generic_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "saleslt",
									"tableName": "Customer",
									"databaseName": "raunakdb"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azureADLSDataSet",
								"type": "DatasetReference",
								"parameters": {
									"folderName": "Customer_Incremental_Data"
								}
							}
						]
					},
					{
						"name": "Update HighWaterMark",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Customer Data from DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select ''',activity('Lookup Fetch HighWaterMark Date').output.firstRow.LastModifiedDate,'''as new_date from saleslt.customer where customerID = 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sql_generic_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "saleslt",
									"tableName": "Customer",
									"databaseName": "raunakdb"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "High_WaterMark_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T04:57:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/High_WaterMark_DS')]",
				"[concat(variables('factoryId'), '/datasets/sql_generic_db')]",
				"[concat(variables('factoryId'), '/datasets/azureADLSDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pilpeline_parameterization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Pipeline_parameterization",
						"description": "This pipeline shall contain all the parameterization concepts, linked service, dataset, even folder creation.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from saleslt.ProductDescription where ProductDescriptionID = 8",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sql_generic_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "saleslt",
									"tableName": "ProductDescription",
									"databaseName": "raunakdb"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azureADLSDataSet",
								"type": "DatasetReference",
								"parameters": {
									"folderName": {
										"value": "@concat('ProductDescription/',formatDateTime(utcnow(),'YYYY'),'/',\nformatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'DD'))",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T04:57:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_generic_db')]",
				"[concat(variables('factoryId'), '/datasets/azureADLSDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_GETMETADATA_example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLS_GETMETADATA_DS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata1').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Customer Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sql_generic_db",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "saleslt",
												"tableName": "Customer",
												"databaseName": "raunakdb"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_GETMETADATA_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T04:57:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_GETMETADATA_DS')]",
				"[concat(variables('factoryId'), '/datasets/sql_generic_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_SET_VARIABLE_example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sql_generic_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "saleslt",
									"tableName": "Customer",
									"databaseName": "raunakdb"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azureADLSDataSet",
								"type": "DatasetReference",
								"parameters": {
									"folderName": "Variable_example_TimeStamp"
								}
							}
						]
					},
					{
						"name": "Start_TimeStamp",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "startTime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "End_TimeStamp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "endTime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "End_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "start_Time",
										"value": {
											"value": "@variables('startTime')",
											"type": "Expression"
										}
									},
									{
										"name": "end_Time",
										"value": {
											"value": "@variables('endTime')",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sql_generic_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "saleslt",
									"tableName": "Customer",
									"databaseName": "raunakdb"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azureADLSDataSet",
								"type": "DatasetReference",
								"parameters": {
									"folderName": "Variable_example_TimeStamp"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"startTime": {
						"type": "String"
					},
					"endTime": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T04:57:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_generic_db')]",
				"[concat(variables('factoryId'), '/datasets/azureADLSDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_if_example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Mapping 1",
				"activities": [
					{
						"name": "Check count of Records",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as RecordCount from saleslt.Customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sql_generic_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "saleslt",
									"tableName": "Customer",
									"databaseName": "raunakdb"
								}
							}
						}
					},
					{
						"name": "Check if Record Count greater than 500",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check count of Records",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Check count of Records').output.firstRow.RecordCount,500)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "If-else case",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azureSQLDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "azureADLSDataSet",
											"type": "DatasetReference",
											"parameters": {
												"folderName": "If else example"
											}
										}
									]
								},
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "If-else case",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Pipeline_if_inside_if_example",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T04:57:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_generic_db')]",
				"[concat(variables('factoryId'), '/datasets/azureSQLDataSet')]",
				"[concat(variables('factoryId'), '/datasets/azureADLSDataSet')]",
				"[concat(variables('factoryId'), '/pipelines/Pipeline_if_inside_if_example')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_if_inside_if_example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Mapping 2: Since, if inside if is not possible then we have to create a separate pipeline to accommodate the business logic. ",
				"activities": [
					{
						"name": "Record count of Product Table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as RecordCount from saleslt.Product",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sql_generic_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "saleslt",
									"tableName": "Product",
									"databaseName": "raunakdb"
								}
							}
						}
					},
					{
						"name": "If inside If example",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Record count of Product Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Record count of Product Table').output.firstRow.RecordCount,1000)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Populate CustomerAddress",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sql_generic_db",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "saleslt",
												"tableName": "CustomerAddress",
												"databaseName": "raunakdb"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azureADLSDataSet",
											"type": "DatasetReference",
											"parameters": {
												"folderName": "If_inside_if_false_case"
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy Product Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "sql_generic_db",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": "saleslt",
												"tableName": "Product",
												"databaseName": "raunakdb"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azureADLSDataSet",
											"type": "DatasetReference",
											"parameters": {
												"folderName": "If_inside_If_example_copy_product"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T04:57:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_generic_db')]",
				"[concat(variables('factoryId'), '/datasets/azureADLSDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fetch Country Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "REST_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azureADLSDataSet",
								"type": "DatasetReference",
								"parameters": {
									"folderName": "Countries"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-22T13:18:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/REST_DS')]",
				"[concat(variables('factoryId'), '/datasets/azureADLSDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/logic_app_send_email_example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sql_generic_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "saleslt",
									"tableName": "customer",
									"databaseName": "raunakdb"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azureADLSDataSet",
								"type": "DatasetReference",
								"parameters": {
									"folderName": "logic_app_example_customer"
								}
							}
						]
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-10.centralus.logic.azure.com:443/workflows/6c963156bf984a188dbf32948bf8dba2/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=9Pdzq69xjsKiJFHQpO82UgGm2_UjveIu8k-_oOxcoHo",
							"method": "POST",
							"headers": {},
							"body": {
								"adfName": "raunakADF",
								"pipelineName": "logic_app_send_email_example",
								"Status": "Passed"
							}
						}
					},
					{
						"name": "Web2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-10.centralus.logic.azure.com:443/workflows/6c963156bf984a188dbf32948bf8dba2/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=9Pdzq69xjsKiJFHQpO82UgGm2_UjveIu8k-_oOxcoHo",
							"method": "POST",
							"headers": {},
							"body": {
								"adfName": "raunakADF",
								"pipelineName": "logic_app_send_email_example",
								"Status": "Failed"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_generic_db')]",
				"[concat(variables('factoryId'), '/datasets/azureADLSDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_parameterisation_example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Pipeline_Parameterisation",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sql_generic_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "saleslt",
									"tableName": {
										"value": "@pipeline().parameters.entityName",
										"type": "Expression"
									},
									"databaseName": {
										"value": "@pipeline().globalParameters.databaseName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "azureADLSDataSet",
								"type": "DatasetReference",
								"parameters": {
									"folderName": {
										"value": "@concat('parameterisation_eg/pipeline_parameterisation/',formatDateTime(utcnow(),'yyyy-MM-dd'))",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"entityName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T04:57:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_generic_db')]",
				"[concat(variables('factoryId'), '/datasets/azureADLSDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_GETMETADATA_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "raunakADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/raunakADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/High_WaterMark_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "raunakADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "HighwaterMark.txt",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/raunakADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/REST_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureADLSDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "raunakADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folderName",
							"type": "Expression"
						},
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/raunakADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureSQLDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "raunakSQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/raunakSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_generic_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "raunakSQLDB",
					"type": "LinkedServiceReference",
					"parameters": {
						"databaseName": {
							"value": "@dataset().databaseName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"schemaName": {
						"type": "string",
						"defaultValue": "saleslt"
					},
					"tableName": {
						"type": "string"
					},
					"databaseName": {
						"type": "string",
						"defaultValue": "raunakdb"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/raunakSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This will fetch all the countries",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('REST_LS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/raunakADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('raunakADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('raunakADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/raunakSQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"databaseName": {
						"type": "string",
						"defaultValue": "raunakdb"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('raunakSQLDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/raunakSQLDBKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('raunakSQLDBKeyVault_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "raunak_Azure_Key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "raunakDBpassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/raunak_Azure_Key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/raunak_Azure_Key_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('raunak_Azure_Key_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Schedule_Trigger_Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is an example of Schedule Trigger.",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pipeline_if_example",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2022-05-29T04:47:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pipeline_if_example')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Storage_Event_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is an example for Storage Event Trigger",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pipeline_if_example",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/landing/blobs/ProductD",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Storage_Event_trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pipeline_if_example')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling_Window_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "REST_example",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2022-05-30T03:24:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 2,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/REST_example')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customAzureIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "UK South",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		}
	]
}