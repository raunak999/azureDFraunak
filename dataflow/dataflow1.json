{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Region as string,",
				"          Country as string,",
				"          {Item Type} as string,",
				"          {Sales Channel} as string,",
				"          {Order Priority} as string,",
				"          {Order Date} as string,",
				"          {Order ID} as string,",
				"          {Ship Date} as string,",
				"          {Units Sold} as string,",
				"          {Unit Price} as string,",
				"          {Unit Cost} as string,",
				"          {Total Revenue} as string,",
				"          {Total Cost} as string,",
				"          {Total Profit} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          Region as string,",
				"          Country as string,",
				"          {Item Type} as string,",
				"          {Sales Channel} as string,",
				"          {Order Priority} as string,",
				"          {Order Date} as string,",
				"          {Order ID} as string,",
				"          {Ship Date} as string,",
				"          {Units Sold} as string,",
				"          {Unit Price} as string,",
				"          {Unit Cost} as string,",
				"          {Total Revenue} as string,",
				"          {Total Cost} as string,",
				"          {Total Profit} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 join(source1@{Order ID} == source2@{Order ID},",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Region = source1@Region,",
				"          Country = source1@Country,",
				"          {Item Type} = source1@{Item Type},",
				"          {Sales Channel} = source1@{Sales Channel},",
				"          {Order Priority} = source1@{Order Priority},",
				"          {Order ID} = source1@{Order ID},",
				"          {Ship Date} = source1@{Ship Date},",
				"          {Units Sold} = source1@{Units Sold},",
				"          {Unit Price} = source1@{Unit Price},",
				"          {Unit Cost} = source1@{Unit Cost},",
				"          {Total Revenue} = source1@{Total Revenue},",
				"          {Total Cost} = source1@{Total Cost},",
				"          {Total Profit} = source1@{Total Profit},",
				"          Region = source2@Region,",
				"          Country = source2@Country,",
				"          {Item Type} = source2@{Item Type},",
				"          {Sales Channel} = source2@{Sales Channel},",
				"          {Order Priority} = source2@{Order Priority},",
				"          {Order Date} = source2@{Order Date},",
				"          {Order ID} = source2@{Order ID},",
				"          {Ship Date} = source2@{Ship Date},",
				"          {Units Sold} = source2@{Units Sold},",
				"          {Unit Price} = source2@{Unit Price},",
				"          {Unit Cost} = source2@{Unit Cost},",
				"          {Total Revenue} = source2@{Total Revenue},",
				"          {Total Cost} = source2@{Total Cost},",
				"          {Total Profit} = source2@{Total Profit}",
				"     )) ~> sink1"
			]
		}
	}
}