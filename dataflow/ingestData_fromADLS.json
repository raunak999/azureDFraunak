{
	"name": "ingestData_fromADLS",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ADLS_ingest_1000_sales_record",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "loadData_toSQL_DB",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Region as string,",
				"          Country as string,",
				"          {Item Type} as string,",
				"          {Sales Channel} as string,",
				"          {Order Priority} as string,",
				"          {Order Date} as date,",
				"          {Order ID} as integer,",
				"          {Ship Date} as date,",
				"          {Units Sold} as integer,",
				"          {Unit Price} as integer,",
				"          {Unit Cost} as string,",
				"          {Total Revenue} as integer,",
				"          {Total Cost} as integer,",
				"          {Total Profit} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> source1",
				"source1 derive(ItemType = toString(byName('ItemType')),",
				"          SalesChannel = toString(byName('SalesChannel')),",
				"          OrderPriority = toString(byName('OrderPriority')),",
				"          OrderDate = toDate(byName('OrderDate')),",
				"          OrderID = toInteger(byName('OrderID')),",
				"          ShipDate = toDate(byName('ShipDate')),",
				"          UnitsSold = toShort(byName('UnitsSold')),",
				"          UnitPrice = toDouble(byName('UnitPrice')),",
				"          UnitCost = toDouble(byName('UnitCost')),",
				"          TotalRevenue = toDouble(byName('TotalRevenue')),",
				"          TotalCost = toDouble(byName('TotalCost')),",
				"          TotalProfit = toDouble(byName('TotalProfit'))) ~> MapDrifted1",
				"MapDrifted1 select(mapColumn(",
				"          Region,",
				"          Country,",
				"          ItemType,",
				"          SalesChannel,",
				"          OrderPriority,",
				"          OrderDate,",
				"          OrderID,",
				"          ShipDate,",
				"          UnitsSold,",
				"          UnitPrice,",
				"          UnitCost,",
				"          TotalRevenue,",
				"          TotalCost,",
				"          TotalProfit",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}